
Main Methods
Http Methods: get, post, put, delete
To be Restfull need to be semantic, example use the delete to delete a register instead a post

Params Types: req = request
Query Params: req.query(Filters, Sort, pagination ) 
console.log(request.query)
Route Params: request.params(Identify a resource on update or delete )
put: app.put('/users/:id', (request, response) => {
delete: app.delete('/users/:id', (request, response) => {
access with  request.params console.log(request.params)   

Body request.body (Data to create or change record/registry)

Route Param
Put and Delete because you are using to access a unique user deleting or updating

Use MongoDB using Atlas.
Create cruster Starter
Create User and Network
Connect to Cluster Using NodeJs 3.0 or later
mongodb+srv://omnistack:omnistack@cluster0-rtwry.mongodb.net/omnistackweek?retryWrites=true&w=majority
yarn add mongoose
const mongoose = require('mongoose')
mongoose.connect('mongodb+srv://omnistack:omnistack@cluster0-rtwry.mongodb.net/omnistackweek?retryWrites=true&w=majority')
eNewUrlParser: true = Deprecated, use useNewUrlParser: true instead
useUnifiedTopology: true 
Verify port errors with portquiz.net:27017 OK
MongoOK

Create a folder src, move content index.js inside and update the package.json

Insert routes after express.json because the node read in a linear mode, from top to the bottom

The controller normally has 5 functions in the maximum 
index = List, 
show = Only one, 
store = Save, 
update = Alter, 
destroy = Delete

If you need to use the same logic (duplicate the logic) more than one time, isolate it 
Rules of DRY = Don't Repeat Yourself

See MongoOperators
https://docs.mongodb.com/manual/reference/operator/

Construindo a interface web | Semana OmniStack 10.0
Optimize aplication with SPA and Reack
React install a lot of dependencies but you can use a tool from Facebook
yarn create react-app web
npx create-react-app web - If you don't install Yarn
